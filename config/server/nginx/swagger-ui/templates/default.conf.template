server {
    listen       80;
    server_name  _;

    gzip on;

    # Swagger UI static
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Serve bundled OpenAPI docs
    location /docs/ {
        alias /usr/share/nginx/html/docs/;
        autoindex off;
    }

    # Reverse proxy to Express API
    location /api/ {
        proxy_pass         http://express:18081/api/;
        proxy_http_version 1.1;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # CORS for demo
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization;
        add_header Access-Control-Allow-Methods GET,POST,PUT,PATCH,DELETE,OPTIONS;
        if ($request_method = OPTIONS) { return 204; }
    }
}

# Custom default.conf.template for swaggerapi/swagger-ui
# Generates /etc/nginx/conf.d/default.conf at container start

  types {
    text/plain yaml;
    text/plain yml;
  }

  gzip on;
  gzip_static on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_types text/plain text/css application/javascript;

  map $request_method $access_control_max_age {
    OPTIONS 1728000; # 20 days
  }
  server_tokens off; # Hide Nginx version

  server {
    listen            8080;
    server_name       localhost;
    index             index.html index.htm;

    location / {
      absolute_redirect off;
      alias            /usr/share/nginx/html/;
      expires 1d;

      location ~ swagger-initializer.js {
        expires -1;
        include templates/cors.conf;
      }

      location ~* \.(?:json|yml|yaml)$ {
        #SWAGGER_ROOT
        expires -1;

        include templates/cors.conf;
      }

      include templates/cors.conf;
      include templates/embedding.conf;
    }

    # Reverse proxy for Express API running on the host (Linux: host-gateway)
    location /api/ {
      proxy_pass http://host.docker.internal:18081/api/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      include templates/cors.conf;
    }
  }
