// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  passwordHash      String?   @map("password_hash")
  emailVerifiedAt   DateTime? @map("email_verified_at")
  emailReissueToken String?   @map("email_reissue_token")
  isAdmin           Boolean   @default(false) @map("is_admin")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  createdBy         Int       @map("created_by")
  updatedBy         Int       @map("updated_by")

  carts Cart[]

  @@map("users")
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  price     Int
  content   String?
  image     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  createdBy Int      @map("created_by")
  updatedBy Int      @map("updated_by")

  carts Cart[]

  @@map("items")
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  itemId    Int      @map("item_id")
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  createdBy Int      @map("created_by")
  updatedBy Int      @map("updated_by")

  user User @relation(fields: [userId], references: [id])
  item Item @relation(fields: [itemId], references: [id])

  @@index([userId])
  @@index([itemId])
  @@map("carts")
}
